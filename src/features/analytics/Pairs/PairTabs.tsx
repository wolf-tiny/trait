import { EmojiHappyIcon, EmojiSadIcon } from '@heroicons/react/outline'
import Image from 'next/image'
import Link from 'next/link'
import { classNames } from '../../../functions'

const tabs = [
  {
    name: 'All',
    href: '/analytics/pairs/',
    icon: (
      <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M0.625 4.25C0.625 3.28859 1.00692 2.36656 1.68674 1.68674C2.36656 1.00692 3.28859 0.625 4.25 0.625H18.75C19.7114 0.625 20.6334 1.00692 21.3133 1.68674C21.9931 2.36656 22.375 3.28859 22.375 4.25V18.75C22.375 19.7114 21.9931 20.6334 21.3133 21.3133C20.6334 21.9931 19.7114 22.375 18.75 22.375H4.25C3.28859 22.375 2.36656 21.9931 1.68674 21.3133C1.00692 20.6334 0.625 19.7114 0.625 18.75V4.25ZM12.7083 19.9583H18.75C19.0705 19.9583 19.3778 19.831 19.6044 19.6044C19.831 19.3778 19.9583 19.0705 19.9583 18.75V12.7083H12.7083V19.9583ZM10.2917 12.7083H3.04167V18.75C3.04167 19.0705 3.16897 19.3778 3.39558 19.6044C3.62219 19.831 3.92953 19.9583 4.25 19.9583H10.2917V12.7083ZM12.7083 10.2917H19.9583V4.25C19.9583 3.92953 19.831 3.62219 19.6044 3.39558C19.3778 3.16897 19.0705 3.04167 18.75 3.04167H12.7083V10.2917ZM10.2917 3.04167H4.25C3.92953 3.04167 3.62219 3.16897 3.39558 3.39558C3.16897 3.62219 3.04167 3.92953 3.04167 4.25V10.2917H10.2917V3.04167Z"
          fill="url(#paint0_linear)"
        />
        <defs>
          <linearGradient
            id="paint0_linear"
            x1="-1.04808"
            y1="0.625"
            x2="26.0692"
            y2="7.24706"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="#0993EC" />
            <stop offset="1" stopColor="#F338C3" />
          </linearGradient>
        </defs>
      </svg>
    ),
    customCurrent: 'bg-gradient-to-r from-blue to-pink text-transparent bg-clip-text',
  },
  // {
  //   name: "Recent",
  //   href: "/analytics/pairs/recent",
  //   icon: <svg width="27" height="27" viewBox="0 0 27 27" fill="none" xmlns="http://www.w3.org/2000/svg">
  //           <path d="M21.9375 0.84375H5.0625C2.73248 0.84375 0.84375 2.73248 0.84375 5.0625V21.9375C0.84375 24.2675 2.73248 26.1562 5.0625 26.1562H21.9375C24.2675 26.1562 26.1562 24.2675 26.1562 21.9375V5.0625C26.1562 2.73248 24.2675 0.84375 21.9375 0.84375ZM8.85938 16.4531H7.78233L5.63752 12.601V16.4531H4.64062V10.5469H5.68561L7.86248 14.4906V10.5469H8.85938V16.4531ZM14.7656 16.4531H10.5469V10.5469H14.6602V11.5455H11.6665V12.855H14.4509V13.8502H11.6665V15.4567H14.7656V16.4531ZM21.7974 16.4531H20.558L19.4067 12.0374L18.2583 16.4531H16.991L15.6094 10.5469H16.8058L17.6782 14.6032L18.7355 10.5469H20.1247L21.1389 14.6724L22.0274 10.5469H23.2031L21.7974 16.4531Z" fill="#BFBFBF"/>
  //         </svg>
  //   ,
  // },
  {
    name: 'Gainers',
    href: '/analytics/pairs/gainers',
    icon: (
      <svg width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M2.16659 10.5C2.16659 8.28987 3.04456 6.17026 4.60736 4.60745C6.17017 3.04465 8.28978 2.16668 10.4999 2.16668C12.7101 2.16668 14.8297 3.04465 16.3925 4.60745C17.9553 6.17026 18.8333 8.28987 18.8333 10.5C18.8333 12.7101 17.9553 14.8298 16.3925 16.3926C14.8297 17.9554 12.7101 18.8333 10.4999 18.8333C8.28978 18.8333 6.17017 17.9554 4.60736 16.3926C3.04456 14.8298 2.16659 12.7101 2.16659 10.5ZM10.4999 0.0833435C4.74679 0.0833435 0.083252 4.74689 0.083252 10.5C0.083252 16.2531 4.74679 20.9167 10.4999 20.9167C16.253 20.9167 20.9166 16.2531 20.9166 10.5C20.9166 4.74689 16.253 0.0833435 10.4999 0.0833435ZM8.16346 11.6458C7.98292 11.4367 7.7267 11.3079 7.45115 11.2876C7.17561 11.2674 6.90332 11.3575 6.69419 11.538C6.48506 11.7186 6.35621 11.9748 6.33599 12.2503C6.31577 12.5259 6.40584 12.7982 6.58638 13.0073C7.43013 13.9833 8.71138 14.6667 10.4999 14.6667C12.2874 14.6667 13.5697 13.9833 14.4135 13.0073C14.594 12.7982 14.6841 12.5259 14.6639 12.2503C14.6436 11.9748 14.5148 11.7186 14.3056 11.538C14.0965 11.3575 13.8242 11.2674 13.5487 11.2876C13.2731 11.3079 13.0169 11.4367 12.8364 11.6458C12.3999 12.1511 11.6999 12.5833 10.4999 12.5833C9.29992 12.5833 8.59992 12.1511 8.16346 11.6458ZM6.33325 8.41668C6.33325 8.14041 6.443 7.87546 6.63835 7.68011C6.8337 7.48476 7.09865 7.37501 7.37492 7.37501H7.38534C7.6616 7.37501 7.92656 7.48476 8.12191 7.68011C8.31726 7.87546 8.427 8.14041 8.427 8.41668C8.427 8.69294 8.31726 8.9579 8.12191 9.15325C7.92656 9.3486 7.6616 9.45834 7.38534 9.45834H7.37492C7.09865 9.45834 6.8337 9.3486 6.63835 9.15325C6.443 8.9579 6.33325 8.69294 6.33325 8.41668ZM13.6249 7.37501C13.3487 7.37501 13.0837 7.48476 12.8884 7.68011C12.693 7.87546 12.5833 8.14041 12.5833 8.41668C12.5833 8.69294 12.693 8.9579 12.8884 9.15325C13.0837 9.3486 13.3487 9.45834 13.6249 9.45834H13.6353C13.9116 9.45834 14.1766 9.3486 14.3719 9.15325C14.5673 8.9579 14.677 8.69294 14.677 8.41668C14.677 8.14041 14.5673 7.87546 14.3719 7.68011C14.1766 7.48476 13.9116 7.37501 13.6353 7.37501H13.6249Z"
          fill="#BFBFBF"
        />
      </svg>
    ),
  },
  {
    name: 'Losers',
    href: '/analytics/pairs/losers',
    icon: (
      <svg width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M7.55417 14.8458C8.33553 14.0647 9.39515 13.6259 10.5 13.6259C11.6049 13.6259 12.6645 14.0647 13.4458 14.8458H7.55417ZM7.375 8.41667H7.38542H7.375ZM13.625 8.41667H13.6354H13.625ZM19.875 10.5C19.875 11.7311 19.6325 12.9502 19.1614 14.0877C18.6902 15.2251 17.9997 16.2586 17.1291 17.1291C16.2586 17.9997 15.2251 18.6902 14.0877 19.1614C12.9502 19.6325 11.7311 19.875 10.5 19.875C9.26886 19.875 8.04977 19.6325 6.91234 19.1614C5.77492 18.6902 4.74142 17.9997 3.87087 17.1291C3.00032 16.2586 2.30977 15.2251 1.83863 14.0877C1.36749 12.9502 1.125 11.7311 1.125 10.5C1.125 8.0136 2.11272 5.62903 3.87087 3.87087C5.62903 2.11272 8.0136 1.125 10.5 1.125C12.9864 1.125 15.371 2.11272 17.1291 3.87087C18.8873 5.62903 19.875 8.0136 19.875 10.5Z"
          stroke="#BFBFBF"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    ),
  },
]

export default function PairTabs({ current }: { current: string }): JSX.Element {
  return (
    <>
      <div className="hidden sm:block">
        <div className="border-b border-gray-700">
          <nav className="-mb-px flex space-x-8" aria-label="Tabs">
            {tabs.map((tab) => (
              <Link href={tab.href}>
                <a
                  key={tab.name}
                  className={classNames(
                    current === tab.name.toLowerCase()
                      ? tab.customCurrent ?? ''
                      : 'border-transparent text-primary hover:text-gray-200 hover:border-gray-300',
                    'group inline-flex items-center py-4 px-1 border-b-2 font-bold text-lg'
                  )}
                >
                  {tab.icon}
                  <span className="ml-2">{tab.name}</span>
                </a>
              </Link>
            ))}
          </nav>
        </div>
      </div>
    </>
  )
}
